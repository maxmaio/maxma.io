{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/home/maio/Projects/maxma.io/components/lines.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport { render } from 'react-dom';\nimport React, { useMemo, useRef } from 'react';\nimport * as THREE from 'three';\nimport * as meshline from 'threejs-meshline';\nimport { extend, Canvas, useFrame, useThree } from 'react-three-fiber';\nimport styles from \"../styles/lines.module.css\";\nextend(meshline);\n\nfunction Fatline({\n  curve,\n  width,\n  color,\n  speed\n}) {\n  const material = useRef();\n  useFrame(() => material.current.uniforms.dashOffset.value -= speed);\n  return /*#__PURE__*/_jsxDEV(\"mesh\", {\n    children: [/*#__PURE__*/_jsxDEV(\"meshLine\", {\n      attach: \"geometry\",\n      vertices: curve\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"meshLineMaterial\", {\n      attach: \"material\",\n      ref: material,\n      transparent: true,\n      depthTest: false,\n      lineWidth: width,\n      color: color,\n      dashArray: 0.1,\n      dashRatio: 0.9\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 14,\n    columnNumber: 5\n  }, this);\n}\n\nfunction Lines({\n  count,\n  colors\n}) {\n  const lines = useMemo(() => new Array(count).fill().map(() => {\n    const pos = new THREE.Vector3(10 - Math.random() * 20, 10 - Math.random() * 20, 10 - Math.random() * 20);\n    const points = new Array(30).fill().map(() => pos.add(new THREE.Vector3(4 - Math.random() * 8, 4 - Math.random() * 8, 2 - Math.random() * 4)).clone());\n    const curve = new THREE.CatmullRomCurve3(points).getPoints(1000);\n    return {\n      color: colors[parseInt(colors.length * Math.random())],\n      width: Math.max(0.01, 0.1 * Math.random()),\n      speed: Math.max(0.000075, 0.0001 * Math.random()),\n      curve\n    };\n  }), [colors, count]);\n  return lines.map((props, index) => /*#__PURE__*/_jsxDEV(Fatline, _objectSpread({}, props), index, false, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 38\n  }, this));\n}\n\nfunction Rig({\n  mouse\n}) {\n  const {\n    camera\n  } = useThree();\n  useFrame(() => {\n    camera.position.x += (mouse.current[0] / 50 - camera.position.x) * 0.05;\n    camera.position.y += (-mouse.current[1] / 50 - camera.position.y) * 0.05;\n    camera.lookAt(0, 0, 0);\n  });\n  return null;\n}\n\nfunction App() {\n  const mouse = useRef([0, 0]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: styles.top,\n    children: /*#__PURE__*/_jsxDEV(Canvas, {\n      camera: {\n        position: [0, 0, 10],\n        fov: 70\n      },\n      onMouseMove: e => mouse.current = [e.clientX - window.innerWidth / 2, e.clientY - window.innerHeight / 2],\n      children: [/*#__PURE__*/_jsxDEV(Lines, {\n        count: 20,\n        colors: ['#7a73ff', '#80e9ff', '#e0feff', '#fec959', '#9487ff']\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(Rig, {\n        mouse: mouse\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 5\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 53,\n    columnNumber: 5\n  }, this);\n}\n\nexport default App;","map":{"version":3,"sources":["/home/maio/Projects/maxma.io/components/lines.js"],"names":["render","React","useMemo","useRef","THREE","meshline","extend","Canvas","useFrame","useThree","styles","Fatline","curve","width","color","speed","material","current","uniforms","dashOffset","value","Lines","count","colors","lines","Array","fill","map","pos","Vector3","Math","random","points","add","clone","CatmullRomCurve3","getPoints","parseInt","length","max","props","index","Rig","mouse","camera","position","x","y","lookAt","App","top","fov","e","clientX","window","innerWidth","clientY","innerHeight"],"mappings":"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","sourcesContent":["import { render } from 'react-dom'\nimport React, { useMemo, useRef } from 'react'\nimport * as THREE from 'three'\nimport * as meshline from 'threejs-meshline'\nimport { extend, Canvas, useFrame, useThree } from 'react-three-fiber'\nimport styles from \"../styles/lines.module.css\"\n\nextend(meshline)\n\nfunction Fatline({ curve, width, color, speed }) {\n  const material = useRef()\n  useFrame(() => (material.current.uniforms.dashOffset.value -= speed))\n  return (\n    <mesh>\n      <meshLine attach=\"geometry\" vertices={curve} />\n      <meshLineMaterial attach=\"material\" ref={material} transparent depthTest={false} lineWidth={width} color={color} dashArray={0.1} dashRatio={0.9} />\n    </mesh>\n  )\n}\n\nfunction Lines({ count, colors }) {\n  const lines = useMemo(\n    () =>\n      new Array(count).fill().map(() => {\n        const pos = new THREE.Vector3(10 - Math.random() * 20, 10 - Math.random() * 20, 10 - Math.random() * 20)\n        const points = new Array(30).fill().map(() => pos.add(new THREE.Vector3(4 - Math.random() * 8, 4 - Math.random() * 8, 2 - Math.random() * 4)).clone())\n        const curve = new THREE.CatmullRomCurve3(points).getPoints(1000)\n        return {\n          color: colors[parseInt(colors.length * Math.random())],\n          width: Math.max(0.01, 0.1 * Math.random()),\n          speed: Math.max(0.000075, 0.0001 * Math.random()),\n          curve\n        }\n      }),\n    [colors, count]\n  )\n  return lines.map((props, index) => <Fatline key={index} {...props} />)\n}\n\nfunction Rig({ mouse }) {\n  const { camera } = useThree()\n  useFrame(() => {\n    camera.position.x += (mouse.current[0] / 50 - camera.position.x) * 0.05\n    camera.position.y += (-mouse.current[1] / 50 - camera.position.y) * 0.05\n    camera.lookAt(0, 0, 0)\n  })\n  return null\n}\n\nfunction App() {\n  const mouse = useRef([0, 0])\n  return (\n    <div className={styles.top}>\n    <Canvas \n      camera={{ position: [0, 0, 10], fov: 70 }}\n      onMouseMove={e => (mouse.current = [e.clientX - window.innerWidth / 2, e.clientY - window.innerHeight / 2])}>\n      <Lines count={20} colors={['#7a73ff', '#80e9ff', '#e0feff', '#fec959', '#9487ff']} />\n      <Rig mouse={mouse} />\n    </Canvas>\n    </div>\n  \n  )\n}\n\nexport default App\n"]},"metadata":{},"sourceType":"module"}